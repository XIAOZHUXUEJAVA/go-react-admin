# Casbin RBAC 模型配置
# 支持角色继承和路径通配符匹配

[request_definition]
# 请求格式：主体(subject), 对象(object), 动作(action)
# subject: user:123 或 role:admin
# object: /api/users 或 /api/users/123
# action: GET, POST, PUT, DELETE 等 HTTP 方法
r = sub, obj, act

[policy_definition]
# 策略格式：主体(subject), 对象(object), 动作(action)
# 示例：role:admin, /api/users, GET
p = sub, obj, act

[role_definition]
# 角色继承关系：用户 -> 角色
# 示例：user:123, role:admin (用户123拥有admin角色)
g = _, _

[policy_effect]
# 策略效果：只要有一条策略允许，就允许访问
e = some(where (p.eft == allow))

[matchers]
# 匹配规则：
# 1. g(r.sub, p.sub): 检查用户是否拥有该角色
# 2. keyMatch2(r.obj, p.obj): 支持路径通配符匹配
#    - /api/users/* 可以匹配 /api/users/123
#    - /api/* 可以匹配所有 /api/ 开头的路径
# 3. regexMatch(r.act, p.act): 支持正则表达式匹配 HTTP 方法
#    - (GET|POST) 可以匹配 GET 或 POST
#    - (GET|POST|PUT|DELETE) 可以匹配多个方法
m = g(r.sub, p.sub) && keyMatch2(r.obj, p.obj) && regexMatch(r.act, p.act)
